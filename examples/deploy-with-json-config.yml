name: Deploy with JSON Configuration

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      api_image: ${{ steps.build.outputs.api_image }}
      frontend_image: ${{ steps.build.outputs.frontend_image }}
      worker_image: ${{ steps.build.outputs.worker_image }}
    steps:
      - uses: actions/checkout@v4

      - name: Build and push images
        id: build
        run: |
          # Your build logic here
          echo "api_image=myapp/api:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "frontend_image=myapp/frontend:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "worker_image=myapp/worker:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    uses: klever-labs/workflows/.github/workflows/deploy-swarm.yml@main
    with:
      repository_name: my-app
      environment_type: prod
      services_config: |
        [
          {
            "service_name": "api",
            "image": "${{ needs.build.outputs.api_image }}",
            "port": 8080,
            "domain": "api",
            "health_url": "/api/health",
            "metrics_path": "/api/metrics",
            "replicas": 3,
            "resource_limits": true,
            "environment": {
              "NODE_ENV": "production",
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
              "REDIS_URL": "redis://cache:6379"
            },
            "networks": ["traefik-public", "backend", "shared-db"],
            "retry": {"attempts": 5, "interval": "200ms"},
            "rate_limit": {"average": 200, "burst": 100},
            "enable_monitoring": true,
            "enable_retry": true,
            "enable_rate_limit": true,
            "use_secrets": true
          },
          {
            "service_name": "frontend",
            "image": "${{ needs.build.outputs.frontend_image }}",
            "port": 3000,
            "domain": "app",
            "health_url": "/",
            "replicas": 2,
            "environment": {
              "NEXT_PUBLIC_API_URL": "https://api.example.com",
              "NODE_ENV": "production"
            },
            "volumes": [
              "/nfs/static-assets:/app/public/assets:ro"
            ]
          },
          {
            "service_name": "worker",
            "image": "${{ needs.build.outputs.worker_image }}",
            "expose": false,
            "networks": ["backend", "shared-db"],
            "internal_port": 9090,
            "environment": {
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
              "WORKER_CONCURRENCY": "4"
            },
            "resources": {
              "limits": {"cpus": "2", "memory": "2G"}
            },
            "volumes": [
              {
                "name": "worker_data",
                "path": "/data",
                "driver": "local",
                "backup": "true"
              }
            ]
          },
          {
            "service_name": "cache",
            "image": "redis:7-alpine",
            "expose": false,
            "networks": ["backend"],
            "internal_port": 6379,
            "resources": {
              "limits": {"cpus": "1", "memory": "1G"}
            },
            "volumes": [
              {
                "name": "redis_data",
                "path": "/data",
                "driver": "local"
              }
            ]
          }
        ]
    secrets:
      portainer_url: ${{ secrets.PORTAINER_URL }}
      portainer_api_token: ${{ secrets.PORTAINER_API_TOKEN }}
      twingate_sa: ${{ secrets.TWINGATE_SERVICE_ACCOUNT }}  # Optional for private network access
